plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '6.0.24'
}

def modId = (project.findProperty('mod_id') ?: 'hbm').toString()
def buildNumber = (mod_build_number ?: '').trim()
def effectiveVersion = buildNumber.isEmpty() ? mod_version : "${mod_version}+build.${buildNumber}"

version = effectiveVersion
group = project.group

base {
    archivesName = archives_base_name
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(java_version as int)
    }
    withSourcesJar()
}

repositories {
    mavenCentral()
    maven { url = 'https://maven.minecraftforge.net' }
}

minecraft {
    mappings channel: mappings_channel, version: mappings_version

    copyIdeResources = true

    runs {
        client {
            workingDirectory project.file('run/client')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            args '--username', 'Player'

            mods {
                create(modId) {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run/server')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                create(modId) {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run/data')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            args '--mod', modId,
                    '--all',
                    '--output', file('src/generated/resources/').toPath().toAbsolutePath().toString(),
                    '--existing', file('src/main/resources/').toPath().toAbsolutePath().toString()

            mods {
                create(modId) {
                    source sourceSets.main
                }
            }
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

tasks.processResources {
    inputs.property 'version', version
    inputs.property 'mcversion', minecraft_version
    inputs.property 'credits', credits

    filesMatching('META-INF/mods.toml') {
        expand([
            version: version,
            mcversion: minecraft_version,
            credits: credits
        ])
    }
}

sourceSets {
    main {
        resources {
            srcDir 'src/generated/resources'
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
}

jar {
    manifest {
        attributes(
            'Specification-Title': archives_base_name,
            'Specification-Vendor': 'HBM Modding Team',
            'Specification-Version': '1',
            'Implementation-Title': project.name,
            'Implementation-Version': project.version,
            'Implementation-Vendor': 'HBM Modding Team'
        )
    }
}

publishing {
    publications {
        create('mavenJava', MavenPublication) {
            from components.java
        }
    }
}
